# Generated by Django 5.1.1 on 2024-10-25 13:47

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Filial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter the name of the filial (branch).', max_length=255, verbose_name='Filial Name')),
            ],
            options={
                'verbose_name': 'Filial',
                'verbose_name_plural': 'Filials',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter the name of the program.', max_length=255, verbose_name='Program Name')),
            ],
            options={
                'verbose_name': 'Program',
                'verbose_name_plural': 'Programs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter a short, descriptive name for the purpose.', max_length=255, verbose_name='Purpose Name')),
            ],
            options={
                'verbose_name': 'Purpose',
                'verbose_name_plural': 'Purposes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter the name of the region.', max_length=255, verbose_name='Region Name')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SourceOfInformation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter the name of the information source.', max_length=255, verbose_name='Source Name')),
            ],
            options={
                'verbose_name': 'Source of Information',
                'verbose_name_plural': 'Sources of Information',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('name', models.CharField(help_text='Enter the full name of the university.', max_length=255, verbose_name='University Name')),
            ],
            options={
                'verbose_name': 'University',
                'verbose_name_plural': 'Universities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('first_name', models.CharField(max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('father_name', models.CharField(max_length=150, verbose_name='Father name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('passport_id', models.CharField(help_text='Enter a valid passport ID with letters and numbers.', max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Passport ID must contain only letters and numbers.', regex='^[A-Za-z0-9]+$')], verbose_name='Passport ID')),
                ('phone_number_1', models.CharField(help_text='Enter the phone number of the user. For example: +994123456789.', max_length=50, verbose_name='Phone number 1')),
                ('phone_number_2', models.CharField(help_text='Enter the phone number of the user. For example: +994123456789.', max_length=50, verbose_name='Phone number 2')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='M', max_length=1, verbose_name='Gender')),
                ('lesson_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline')], default='offline', max_length=10, verbose_name='Lesson Type')),
                ('status', models.CharField(choices=[('test', 'Test'), ('on_hold', 'On Hold'), ('active', 'Active'), ('deactive', 'Deactive')], default='on_hold', help_text='Current status of the payment.', max_length=15, verbose_name='Status')),
                ('filial', models.ForeignKey(help_text='Select the filial (branch).', on_delete=django.db.models.deletion.CASCADE, to='register.filial', verbose_name='Filial')),
                ('program', models.ForeignKey(help_text='Select the program.', on_delete=django.db.models.deletion.CASCADE, to='register.program', verbose_name='Program')),
                ('purpose', models.ForeignKey(help_text='Select the purpose for registration.', on_delete=django.db.models.deletion.CASCADE, to='register.purpose', verbose_name='Purpose')),
                ('region', models.ForeignKey(help_text='Select the region.', on_delete=django.db.models.deletion.CASCADE, to='register.region', verbose_name='Region')),
                ('source_of_information', models.ForeignKey(help_text='Select the source of information.', on_delete=django.db.models.deletion.CASCADE, to='register.sourceofinformation', verbose_name='Source of Information')),
                ('university', models.ForeignKey(help_text='Select the university.', on_delete=django.db.models.deletion.CASCADE, to='register.university', verbose_name='University')),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Registrations',
                'ordering': ['-created_at'],
            },
        ),
    ]
